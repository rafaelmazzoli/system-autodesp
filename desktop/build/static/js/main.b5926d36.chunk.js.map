{"version":3,"sources":["pages/NavBar/index.js","pages/NotFound/index.js","components/table/TableHeader.js","components/table/TableBody.js","components/table/Table.js","utils/paginate.js","components/utilities/SearchBox.js","components/utilities/Pagination.js","services/apiBackend.js","components/utilities/LoadingScreen.js","pages/VehicleTable/SideFilter.js","pages/VehicleTable/index.js","pages/CustomerTable/index.js","components/form/Input.js","utils/validateInput.js","hooks/useForm.js","components/form/LoadingButton.js","components/form/TextArea.js","pages/ClienteInformationForm/ClienteForm.js","pages/ClienteInformationForm/VehiclesForm.js","pages/ClienteInformationForm/index.js","Routes.js","App.js","index.js"],"names":["NavBar","id","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NotFound","TableHeader","sortColumn","columns","onSort","map","column","undefined","visible","label","scope","style","cursor","onClick","path","order","key","icon","faSortUp","faSortDown","renderSortIcon","TableBody","data","onDoubleClickTr","renderCell","item","content","_","get","createKey","uniqid","onDoubleClick","e","index","Table","paginate","items","pageNumber","pageSize","startIndex","slice","take","value","SearchBox","onChange","placeholder","name","currentTarget","Pagination","itemsCount","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","apiBackend","axios","create","baseURL","interceptors","response","use","error","status","toast","warn","isString","Promise","reject","getCustomerByID","a","options","JSON","stringify","params","result","getAllCustomers","getAllVehicles","saveCustomer","newData","_id","body","put","post","saveVehicle","removeVehicle","delete","removeCustomer","checkVehicleAdvised","check","LoadingScreen","role","aria-hidden","SideFilter","onRadioFilterChange","defaultChecked","htmlFor","VehicleTable","history","useState","isLoaded","setIsLoaded","vehicles","setVehicles","setSortColumn","searchQuery","setSearchQuery","setCurrentPage","license_plate","filterLicense","setFilterLicense","table","vehicleRow","handleAdvisedCheck","checked","advised","moment","diff","window","confirm","newVehicles","filter","vehicle","success","owner","useEffect","loadVehicles","reloadData","forEach","target","handleRadioFilterChange","newFilter","filtered","toString","toLowerCase","includes","orderBy","totalCount","length","getProcessedData","processedVehicles","query","sortColumnName","c","getPlaceHolder","push","CustomerTable","customers","setCustomers","customerRow","newCustomers","customer","loadCustomers","firstLoad","Input","formControls","showLabel","validateClass","valid","touched","autoFocus","readOnly","autoComplete","showError","validateInput","rules","rule","validateFunctions","Error","Object","keys","join","ruleValue","isValid","invalidMessage","minLength","maxLength","isRequired","trim","isEmail","test","String","isCpf","isCnpj","isCpfOrCnpj","isPhone","isLicensePlate","useForm","formSchema","doSubmitCallback","onChangeCallback","formIsSubmitting","setFormIsSubmitting","formIsValid","setFormIsValid","initiateFormControls","setFormControlsState","setFormControls","handleSubmit","preventDefault","possibleEnds","default","done","inputName","handleChange","persist","updatedElement","possibleInputs","checkbox","autocomplete","currentMask","setUpMask","mask","applyMask","validationRules","validInput","convertDate","dateIOFormat","formatValue","valuePath","reloadFormValues","newDataObject","formControlsCopy","newFormControls","validControls","text","select","valueSelector","labelSelector","displayValue","textArea","rows","emptyModels","inputFormat","outputFormat","format","int","string","boolean","conformToMask","guide","previousConformedValue","conformedValue","maskName","preCodedMasks","cpf","cnpj","cellphone","phone","money","createNumberMask","prefix","allowDecimal","allowNegative","date","selectedMask","isPlainObject","sizesArray","sortBy","find","valueSize","LoadingButton","normalText","loadingText","normalIcon","disabledWhen","isLoading","buttonClass","disabled","TextArea","ClienteForm","setCustomer","doSubmit","formController","cpf_cnpj","18","14","phone1","15","phone2","email","notes","newCustomer","assign","set","onSubmit","VehicleForm","selectedVehicle","setSelectedVehicle","vehicleTable","addNewVehicle","vehicleIndex","findIndex","customerVehicle","_key","brand","model","renavam","holder","emptyVehicleIndex","_isValid","newSelectedIndex","ClienteInformationForm","match","loadCustomer","fisrtLoad","savedCustomer","all","replace","pathname","Routes","from","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5926d36.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <nav\r\n      id=\"navBar-container\"\r\n      className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n    >\r\n      <Link className=\"navbar-brand h1 mb-0\" to=\"/lista/veiculos\">\r\n        Autodesp\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/cliente/novo\">\r\n            Cadastrar Cliente\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/lista/veiculos\">\r\n            Lista de Veículos\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/lista/clientes\">\r\n            Lista de Clientes\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"container h1 h-75\">\r\n      <div className=\"row align-items-center justify-content-center h-100\">\r\n        <div className=\"col-sm-3 text-center\">\r\n          <span className=\"badge badge-danger mb-3\">404</span>\r\n          <p className=\"h5\">\r\n            A página que está tentando acessar não foi encontrada!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TableHeader = ({ sortColumn, columns, onSort }) => {\r\n  const raiseSort = (path) => {\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    onSort(sortColumn);\r\n  };\r\n\r\n  const renderSortIcon = (column) => {\r\n    const { path, order } = sortColumn;\r\n    if (column.path !== path) return null;\r\n    if (order === \"asc\") return <FontAwesomeIcon icon={faSortUp} />;\r\n    return <FontAwesomeIcon icon={faSortDown} />;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {columns.map((column) => {\r\n          if (column.visible !== undefined && !column.visible) return null;\r\n          return (\r\n            <th\r\n              className={\r\n                typeof column.label === \"string\"\r\n                  ? \"font-weight-bold pl-0\"\r\n                  : \"font-weight-bold pl-0 text-right\"\r\n              }\r\n              scope=\"col\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() =>\r\n                column.label &&\r\n                typeof column.label === \"string\" &&\r\n                raiseSort(column.path)\r\n              }\r\n              key={column.path || column.key}\r\n            >\r\n              {column.label}&nbsp;\r\n              {typeof column.label === \"string\" && renderSortIcon(column)}\r\n            </th>\r\n          );\r\n        })}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TableBody({ data, columns, onDoubleClickTr }) {\r\n  function renderCell(item, column) {\r\n    if (column.content) {\r\n      return column.content(item);\r\n    }\r\n    return _.get(item, column.path);\r\n  }\r\n\r\n  function createKey(item, column) {\r\n    return item.id + (column.path || column.key);\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr\r\n          key={uniqid()}\r\n          onDoubleClick={(e) => {\r\n            onDoubleClickTr({ e, item });\r\n          }}\r\n        >\r\n          {columns.map((column, index) => {\r\n            if (column.visible !== undefined && !column.visible) return null;\r\n            return index !== 0 ? (\r\n              <td className=\"p-1 align-middle\" key={createKey(item, column)}>\r\n                {renderCell(item, column)}\r\n              </td>\r\n            ) : (\r\n              <th\r\n                scope=\"row\"\r\n                className=\"p-1 align-middle font-weight-normal\"\r\n                key={createKey(item, column)}\r\n              >\r\n                {renderCell(item, column)}\r\n              </th>\r\n            );\r\n          })}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableBody from \"./TableBody\";\r\nimport PropTypes from \"prop-types\"; //TODO Adicionar esse PropTypes nos Componentes Comuns\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data, onDoubleClickTr }) => {\r\n  return (\r\n    <table className=\"table table-hover\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody\r\n        data={data}\r\n        columns={columns}\r\n        onDoubleClickTr={onDoubleClickTr}\r\n      />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n\r\nTable.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  sortColumn: PropTypes.object.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n","/**\r\n * Validador de Inputs\r\n *\r\n * @param items ARRAY de itens para serem paginados\r\n * @param pageNumber INTEGER de número da página mostrada\r\n * @param pageSize INTEGER de quantidade de itens na página\r\n * @return { items } Retorna os itens daquela página\r\n */\r\n\r\nimport _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SearchBox({ value, onChange, placeholder }) {\r\n  return (\r\n    <input\r\n      id=\"searchBox\"\r\n      className=\"form-control\"\r\n      type=\"search\"\r\n      name=\"query\"\r\n      placeholder={placeholder}\r\n      aria-label=\"Search\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function Pagination({\r\n  itemsCount,\r\n  pageSize,\r\n  onPageChange,\r\n  currentPage,\r\n}) {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <button onClick={() => onPageChange(page)} className=\"page-link\">\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\n\r\nconst apiBackend = axios.create({ baseURL: \"http://localhost:3333/API\" });\r\n\r\napiBackend.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    toast.error(`Algum erro inexperado ocorreu.`);\r\n  } else {\r\n    if (error.response.status === 403 || error.response.status === 401)\r\n      toast.warn(\"Usuário sem Permissão\");\r\n    else\r\n      toast.error(\r\n        `${error.response.status}: ${\r\n          _.isString(error.response.data)\r\n            ? error.response.data\r\n            : \"Erro no Webservice\"\r\n        }`\r\n      );\r\n  }\r\n\r\n  return Promise.reject(error);\r\n  // .catch(err => {});\r\n});\r\n\r\nconst getCustomerByID = async (id, options = undefined) => {\r\n  if (options) options = JSON.stringify(options);\r\n  const { data: result } = await apiBackend.get(`/customer/${id}`, {\r\n    params: options,\r\n  });\r\n  return result;\r\n};\r\n\r\nconst getAllCustomers = async (options = undefined) => {\r\n  if (options) options = JSON.stringify(options);\r\n  const { data: result } = await apiBackend.get(\"/customers\", {\r\n    params: options,\r\n  });\r\n  return result;\r\n};\r\n\r\nconst getAllVehicles = async (options = undefined) => {\r\n  if (options) options = JSON.stringify(options);\r\n  const { data: result } = await apiBackend.get(\"/vehicles\", {\r\n    params: options,\r\n  });\r\n  return result;\r\n};\r\n\r\nconst saveCustomer = async (newData, options = undefined) => {\r\n  if (options) options = JSON.stringify(options);\r\n  if (newData._id) {\r\n    const body = { ...newData };\r\n    delete body._id;\r\n    const { data: result } = await apiBackend.put(\r\n      `/customer/${newData._id}`,\r\n      body,\r\n      {\r\n        params: options,\r\n      }\r\n    );\r\n    return result;\r\n  }\r\n\r\n  const body = { ...newData };\r\n  delete body._id;\r\n  const { data: result } = await apiBackend.post(`/customer`, body, {\r\n    params: options,\r\n  });\r\n  return result;\r\n};\r\n\r\nconst saveVehicle = async (newData, options = undefined) => {\r\n  if (options) options = JSON.stringify(options);\r\n  if (newData._id) {\r\n    const body = { ...newData };\r\n    delete body._id;\r\n    const { data: result } = await apiBackend.put(\r\n      `/vehicle/${newData._id}`,\r\n      body,\r\n      {\r\n        params: options,\r\n      }\r\n    );\r\n    return result;\r\n  }\r\n\r\n  const body = { ...newData };\r\n  delete body._id;\r\n  const { data: result } = await apiBackend.post(`/vehicle`, body);\r\n  return result;\r\n};\r\n\r\nconst removeVehicle = async (id, options = undefined) => {\r\n  if (options) options = JSON.stringify(options);\r\n  await apiBackend.delete(`/vehicle/${id}`, {\r\n    params: options,\r\n  });\r\n  return true;\r\n};\r\n\r\nconst removeCustomer = async (id, options = undefined) => {\r\n  if (options) options = JSON.stringify(options);\r\n  await apiBackend.delete(`/customer/${id}`, {\r\n    params: options,\r\n  });\r\n  return true;\r\n};\r\n\r\nconst checkVehicleAdvised = async (id, check, options = undefined) => {\r\n  if (options) options = JSON.stringify(options);\r\n  await apiBackend.post(`/vehicle/${id}/check/${check}`, {\r\n    params: options,\r\n  });\r\n  return true;\r\n};\r\n\r\nexport default {\r\n  getCustomerByID,\r\n  getAllCustomers,\r\n  getAllVehicles,\r\n  saveCustomer,\r\n  saveVehicle,\r\n  removeVehicle,\r\n  removeCustomer,\r\n  checkVehicleAdvised,\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <div className=\"container h-75\">\r\n      <div className=\"row align-items-center justify-content-center h-100\">\r\n        <span\r\n          className=\"spinner-border text-primary mr-3\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        ></span>\r\n        <strong>Carregando...</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SideFilter({ onRadioFilterChange }) {\r\n  return (\r\n    <div\r\n      className=\"col-sm-2 align-self-start text-center border-right p-3 rounded-lg bg-light\"\r\n      onChange={onRadioFilterChange}\r\n    >\r\n      <h5>\r\n        <i className=\"fas fa-car\" />\r\n        &nbsp;Final de Placa\r\n      </h5>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_all\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"\"\r\n          defaultChecked\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_all\"\r\n        >\r\n          Todos\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_1\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"1$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_1\"\r\n        >\r\n          1\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_2\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"2$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_2\"\r\n        >\r\n          2\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_3\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"3$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_3\"\r\n        >\r\n          3\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_4\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"4$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_4\"\r\n        >\r\n          4\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_5\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"5$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_5\"\r\n        >\r\n          5\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_6\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"6$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_6\"\r\n        >\r\n          6\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_7\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"7$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_7\"\r\n        >\r\n          7\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_8\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"8$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_8\"\r\n        >\r\n          8\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_9\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"9$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_9\"\r\n        >\r\n          9\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          id=\"final_license_plate_0\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"final_license_plate\"\r\n          value=\"0$\"\r\n        />\r\n        <label\r\n          className=\"form-check-label px-2\"\r\n          htmlFor=\"final_license_plate_0\"\r\n        >\r\n          0\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"../../components/table/Table\";\r\nimport { paginate } from \"../../utils/paginate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"../../components/utilities/SearchBox\";\r\nimport Pagination from \"../../components/utilities/Pagination\";\r\nimport _ from \"lodash\";\r\nimport apiBackend from \"../../services/apiBackend\";\r\nimport LoadingScreen from \"../../components/utilities/LoadingScreen\";\r\nimport { toast } from \"react-toastify\";\r\nimport SideFilter from \"./SideFilter\";\r\nimport moment from \"moment\";\r\n\r\nexport default function VehicleTable({ history }) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [sortColumn, setSortColumn] = useState({\r\n    path: \"owner.name\",\r\n    order: \"asc\",\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filterLicense, setFilterLicense] = useState({ license_plate: \"\" });\r\n  const table = {\r\n    columns: [\r\n      { path: \"owner.name\", label: \"Nome\" },\r\n      { path: \"owner.phone1\", label: \"Telefone 1\" },\r\n      { path: \"license_plate\", label: \"Placa\" },\r\n      { path: \"brand\", label: \"Marca\" },\r\n      { path: \"model\", label: \"Modelo\" },\r\n      { path: \"renavam\", label: \"Renavam\" },\r\n      { path: \"holder\", label: \"Proprietario\" },\r\n      {\r\n        key: \"advised\",\r\n        label: <>Avisado no Mês</>,\r\n        content: (vehicleRow) => (\r\n          <div className=\"align-middle text-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={handleAdvisedCheck(vehicleRow)}\r\n              checked={\r\n                vehicleRow.advised &&\r\n                moment().diff(moment(vehicleRow.advised), \"days\") <= 31\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        key: \"controls\",\r\n        label: (\r\n          <Link to=\"/cliente/novo\">\r\n            <button className=\"btn btn-success btn-sm\">\r\n              Novo&nbsp;\r\n              <i className=\"fas fa-plus\" />\r\n            </button>\r\n          </Link>\r\n        ),\r\n        content: (vehicleRow) => (\r\n          <div className=\"text-right\">\r\n            <button\r\n              onClick={async () => {\r\n                if (\r\n                  !window.confirm(\r\n                    `Você deseja realmente apagar o veículo ${\r\n                      vehicleRow.license_plate ? vehicleRow.license_plate : \"\"\r\n                    }?`\r\n                  )\r\n                )\r\n                  return;\r\n\r\n                const newVehicles = vehicles.filter(\r\n                  (vehicle) => vehicle._id !== vehicleRow._id\r\n                );\r\n                setVehicles(newVehicles);\r\n\r\n                if (vehicleRow._id)\r\n                  await apiBackend.removeVehicle(vehicleRow._id);\r\n\r\n                toast.success(\r\n                  `Veículo ${\r\n                    vehicleRow.license_plate ? vehicleRow.license_plate : \"\"\r\n                  } foi apagado!`\r\n                );\r\n              }}\r\n              className=\"btn btn-danger btn-sm m-1\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n            <Link to={`/cliente/${vehicleRow.owner._id}`}>\r\n              <button className=\"btn btn-primary btn-sm\">\r\n                <i className=\"far fa-eye\" />\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n    pageSize: 10,\r\n  };\r\n\r\n  //Carregar Dados do Banco\r\n  useEffect(() => {\r\n    async function reloadData() {\r\n      await loadVehicles(filterLicense);\r\n      setIsLoaded(true);\r\n    }\r\n    reloadData();\r\n  }, [filterLicense]);\r\n\r\n  const loadVehicles = async (filter) => {\r\n    const data = await apiBackend.getAllVehicles({ filter });\r\n    setVehicles(data);\r\n  };\r\n\r\n  const handleAdvisedCheck = (vehicleRow) => async (e) => {\r\n    vehicles.forEach((vehicle) => {\r\n      if (vehicleRow._id === vehicle._id)\r\n        vehicle.advised = e.target.checked ? moment() : undefined;\r\n    });\r\n    setVehicles([...vehicles]);\r\n\r\n    await apiBackend.checkVehicleAdvised(vehicleRow._id, e.target.checked);\r\n  };\r\n\r\n  const getProcessedData = () => {\r\n    const { pageSize } = table;\r\n    let filtered = vehicles;\r\n    if (searchQuery)\r\n      filtered = vehicles.filter((vehicle) =>\r\n        _.toString(_.get(vehicle, sortColumn.path))\r\n          .toLowerCase()\r\n          .includes(searchQuery.toLowerCase())\r\n      );\r\n    const ordered = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const data = paginate(ordered, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data };\r\n  };\r\n\r\n  const getPlaceHolder = () => {\r\n    const { columns } = table;\r\n    const sortColumnName = columns.filter((c) => {\r\n      return sortColumn.path === c.path ? c : null;\r\n    });\r\n    return `Filtrar por ${sortColumnName[0].label}...`;\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleSort = (sortColumn) => {\r\n    setSortColumn({ ...sortColumn });\r\n  };\r\n\r\n  const handleRadioFilterChange = async (e) => {\r\n    const newFilter = { license_plate: e.target.value };\r\n    setFilterLicense(newFilter);\r\n  };\r\n\r\n  const handleDoubleClickTr = ({ item: vehicle }) => {\r\n    history.push(`/cliente/${vehicle.owner._id}`);\r\n  };\r\n\r\n  const { totalCount, data: processedVehicles } = getProcessedData();\r\n  return isLoaded ? (\r\n    <div className=\"container-fluid p-5\">\r\n      <div className=\"row\">\r\n        <SideFilter onRadioFilterChange={handleRadioFilterChange} />\r\n        <div className=\"col-10\">\r\n          <SearchBox\r\n            value={searchQuery}\r\n            onChange={handleSearch}\r\n            placeholder={getPlaceHolder()}\r\n          />\r\n          <div className=\"pt-1 px-1\">\r\n            <Table\r\n              columns={table.columns}\r\n              sortColumn={sortColumn}\r\n              onSort={handleSort}\r\n              data={processedVehicles}\r\n              onDoubleClickTr={handleDoubleClickTr}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={table.pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <LoadingScreen />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"../../components/table/Table\";\r\nimport { paginate } from \"../../utils/paginate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"../../components/utilities/SearchBox\";\r\nimport Pagination from \"../../components/utilities/Pagination\";\r\nimport _ from \"lodash\";\r\nimport apiBackend from \"../../services/apiBackend\";\r\nimport LoadingScreen from \"../../components/utilities/LoadingScreen\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function CustomerTable({ history }) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [sortColumn, setSortColumn] = useState({ path: \"name\", order: \"asc\" });\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const table = {\r\n    columns: [\r\n      { path: \"name\", label: \"Nome\" },\r\n      { path: \"cpf_cnpj\", label: \"CPF/CNPJ\" },\r\n      { path: \"phone1\", label: \"Telefone 1\" },\r\n      { path: \"email\", label: \"E-mail\" },\r\n      {\r\n        key: \"controls\",\r\n        label: (\r\n          <Link to=\"/cliente/novo\">\r\n            <button className=\"btn btn-success btn-sm\">\r\n              Novo&nbsp;\r\n              <i className=\"fas fa-plus\" />\r\n            </button>\r\n          </Link>\r\n        ),\r\n        content: (customerRow) => (\r\n          <div className=\"container text-right\">\r\n            <button\r\n              onClick={async () => {\r\n                if (\r\n                  !window.confirm(\r\n                    `Você deseja realmente apagar a pessoa ${\r\n                      customerRow.name ? customerRow.name : \"\"\r\n                    }?`\r\n                  )\r\n                )\r\n                  return;\r\n\r\n                const newCustomers = customers.filter(\r\n                  (customer) => customer._id !== customerRow._id\r\n                );\r\n                setCustomers(newCustomers);\r\n\r\n                if (customerRow._id)\r\n                  await apiBackend.removeCustomer(customerRow._id);\r\n\r\n                toast.success(\r\n                  `Pessoa ${\r\n                    customerRow.name ? customerRow.name : \"\"\r\n                  } foi apagada!`\r\n                );\r\n              }}\r\n              className=\"btn btn-danger btn-sm m-1\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n            <Link to={`/cliente/${customerRow._id}`}>\r\n              <button className=\"btn btn-primary btn-sm\">\r\n                <i className=\"far fa-eye\" />\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n    pageSize: 10,\r\n  };\r\n\r\n  //Carregar Dados do Banco\r\n  useEffect(() => {\r\n    async function firstLoad() {\r\n      await loadCustomers();\r\n      setIsLoaded(true);\r\n    }\r\n    firstLoad();\r\n  }, []);\r\n\r\n  const loadCustomers = async () => {\r\n    const data = await apiBackend.getAllCustomers();\r\n    setCustomers(data);\r\n  };\r\n\r\n  const getProcessedData = () => {\r\n    const { pageSize } = table;\r\n    let filtered = customers;\r\n    if (searchQuery)\r\n      filtered = customers.filter((customer) =>\r\n        _.toString(_.get(customer, sortColumn.path))\r\n          .toLowerCase()\r\n          .includes(searchQuery.toLowerCase())\r\n      );\r\n    const ordered = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const data = paginate(ordered, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data };\r\n  };\r\n\r\n  const getPlaceHolder = () => {\r\n    const { columns } = table;\r\n    const sortColumnName = columns.filter((c) => {\r\n      return sortColumn.path === c.path ? c : null;\r\n    });\r\n    return `Filtrar por ${sortColumnName[0].label}...`;\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleSort = (sortColumn) => {\r\n    setSortColumn({ ...sortColumn });\r\n  };\r\n\r\n  const handleDoubleClickTr = ({ item: customer }) => {\r\n    history.push(`/cliente/${customer._id}`);\r\n  };\r\n\r\n  const { totalCount, data: processedVehicles } = getProcessedData();\r\n  return isLoaded ? (\r\n    <div className=\"container h-75 mt-5\">\r\n      <SearchBox\r\n        value={searchQuery}\r\n        onChange={handleSearch}\r\n        placeholder={getPlaceHolder()}\r\n      />\r\n      <div className=\"mt-1\">\r\n        <Table\r\n          columns={table.columns}\r\n          sortColumn={sortColumn}\r\n          onSort={handleSort}\r\n          data={processedVehicles}\r\n          onDoubleClickTr={handleDoubleClickTr}\r\n        />\r\n      </div>\r\n      <Pagination\r\n        itemsCount={totalCount}\r\n        pageSize={table.pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <LoadingScreen />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n * Render de Inputs\r\n *\r\n * @param name STRING\r\n * @description nome do input e usado para pegar informações no formControls\r\n *\r\n * @param formControls OBJECT\r\n * @description variável contendo o formControls do hook useForm.js\r\n *\r\n * @param onChange FUNCTION\r\n * @description função que é chamada para atualizar o valor do input\r\n */\r\n\r\nexport default function Input({ name, formControls, onChange }) {\r\n  const {\r\n    label,\r\n    error,\r\n    showLabel,\r\n    validateClass,\r\n    valid,\r\n    touched,\r\n    className,\r\n    value,\r\n    type,\r\n    placeholder,\r\n    autoFocus,\r\n    readOnly,\r\n    autoComplete,\r\n    showError,\r\n  } = formControls[name];\r\n\r\n  return (\r\n    <div className=\"form-group\" id={name}>\r\n      {showLabel && <label htmlFor={name}>{label}</label>}\r\n      <input\r\n        autoComplete={autoComplete}\r\n        value={value || \"\"}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        autoFocus={autoFocus}\r\n        readOnly={readOnly}\r\n        onChange={onChange}\r\n        name={name}\r\n        className={\r\n          validateClass && touched\r\n            ? `${className} ${valid ? \"is-valid\" : \"is-invalid\"}`\r\n            : className\r\n        }\r\n      />\r\n      {showError &&\r\n        error &&\r\n        touched &&\r\n        (validateClass ? (\r\n          <small className=\"text-danger\">{error}</small>\r\n        ) : (\r\n          <div className=\"badge badge-pill badge-danger\">{error}</div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Validador de Inputs\r\n *\r\n * @param value STRING de valor do campo\r\n * @param label STRING de texto do campo\r\n * @param rules OBJECT das regras para aplicar no valor\r\n * @return { { valid, error } } resultado da validação e mensagem de erro se não passou na validação\r\n */\r\n\r\nexport default function validateInput(value, label, rules) {\r\n  for (let rule in rules) {\r\n    if (validateFunctions[rule]) {\r\n      const result = validateFunctions[rule]({\r\n        label,\r\n        value,\r\n        ruleValue: rules[rule],\r\n      });\r\n\r\n      if (!result.isValid)\r\n        return { valid: result.isValid, error: result.invalidMessage };\r\n    } else {\r\n      throw new Error(\r\n        `A regra da validação '${rule}' é inválida. São aceitos apenas os valores: ${Object.keys(\r\n          validateFunctions\r\n        ).join(\", \")}`\r\n      );\r\n    }\r\n  }\r\n\r\n  return { valid: true, error: \"\" };\r\n}\r\n\r\nconst validateFunctions = {\r\n  minLength: ({ label, value, ruleValue }) => {\r\n    return {\r\n      isValid: value && value.length >= ruleValue,\r\n      invalidMessage: `${label} tem no mínimo ${ruleValue} caracteres!`,\r\n    };\r\n  },\r\n\r\n  maxLength: ({ label, value, ruleValue }) => {\r\n    return {\r\n      isValid: value && value.length <= ruleValue,\r\n      invalidMessage: `${label} tem no máximo ${ruleValue} caracteres!`,\r\n    };\r\n  },\r\n\r\n  isRequired: ({ label, value, ruleValue }) => {\r\n    return {\r\n      isValid: value && value.trim() !== \"\",\r\n      invalidMessage: `${label} é um campo Requerido!`,\r\n    };\r\n  },\r\n\r\n  isEmail: ({ label, value, ruleValue }) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    return {\r\n      isValid: !value || (value && re.test(String(value).toLowerCase())),\r\n      invalidMessage: `${label} não é válido!`,\r\n    };\r\n  },\r\n\r\n  isCpf: ({ label, value, ruleValue }) => {\r\n    const re = /\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}/;\r\n\r\n    return {\r\n      isValid: !value || (value && re.test(String(value).toLowerCase())),\r\n      invalidMessage: `${label} não válido!`,\r\n    };\r\n  },\r\n\r\n  isCnpj: ({ label, value, ruleValue }) => {\r\n    const re = /\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}/;\r\n\r\n    return {\r\n      isValid: !value || (value && re.test(String(value).toLowerCase())),\r\n      invalidMessage: `${label} não é válido!`,\r\n    };\r\n  },\r\n\r\n  isCpfOrCnpj: ({ label, value, ruleValue }) => {\r\n    const re = /(\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2})|(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2})/;\r\n\r\n    return {\r\n      isValid: !value || (value && re.test(String(value).toLowerCase())),\r\n      invalidMessage: `${label} não é válido!`,\r\n    };\r\n  },\r\n\r\n  isPhone: ({ label, value, ruleValue }) => {\r\n    const re = /\\(\\d{2}\\) \\d{4,5}-\\d{4}/;\r\n\r\n    return {\r\n      isValid: !value || (value && re.test(String(value).toLowerCase())),\r\n      invalidMessage: `${label} não é válido!`,\r\n    };\r\n  },\r\n\r\n  isLicensePlate: ({ label, value, ruleValue }) => {\r\n    const re = /[a-z]{3}-\\d[a-z0-9]\\d{2}/i;\r\n\r\n    return {\r\n      isValid: !value || (value && re.test(String(value).toLowerCase())),\r\n      invalidMessage: `${label} não é válido!`,\r\n    };\r\n  },\r\n};\r\n","/**\r\n * Validador de Inputs\r\n *\r\n * @param formSchema OBJECT (Obrigatório) de valor inicial da variável de Controle de Formulário\r\n * @param doSubmitCallback FUNCTION (Obrigatório) que é executada quando o formulário é enviado (Essa função pode retornar nada, default, error, done)\r\n * @param onChangeCallback FUNCTION (Opcional) que é executada quando o valor de um campo é alterado\r\n * @return { {\r\n * formControls,\r\n * handleSubmit,\r\n * handleChange\r\n * } } Retorna a função de Submit, os Controles do Formulário e a função de mundança de valor do\r\n */\r\n\r\nimport { useState } from \"react\";\r\nimport validateInput from \"../utils/validateInput\";\r\nimport { conformToMask } from \"react-text-mask\";\r\nimport createNumberMask from \"text-mask-addons/dist/createNumberMask\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function useForm(\r\n  formSchema,\r\n  doSubmitCallback,\r\n  onChangeCallback\r\n) {\r\n  const [formIsSubmitting, setFormIsSubmitting] = useState(false);\r\n  const [formIsValid, setFormIsValid] = useState(true);\r\n  const [formControls, setFormControlsState] = useState(\r\n    initiateFormControls(formSchema)\r\n  );\r\n\r\n  const setFormControls = (formControls) => {\r\n    setFormControlsState(initiateFormControls(formControls));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    const possibleEnds = {\r\n      default: () => {\r\n        setFormIsSubmitting(false);\r\n      },\r\n      error: () => {\r\n        Object.keys(formControls).forEach((name) => {\r\n          formControls[name].valid = false;\r\n        });\r\n        setFormIsSubmitting(false);\r\n        setFormControls(formControls);\r\n      },\r\n      done: () => {},\r\n    };\r\n\r\n    //Aplica validação de Campos e Formulário\r\n    let valid = true;\r\n    Object.keys(formControls).forEach((inputName) => {\r\n      valid = formControls[inputName].valid && valid;\r\n    });\r\n    setFormIsValid(valid);\r\n\r\n    if (!formIsValid && valid) return;\r\n\r\n    //Chamada de Callback\r\n    setFormIsSubmitting(true);\r\n    const result = await doSubmitCallback();\r\n    if (possibleEnds[result || \"default\"]) possibleEnds[result || \"default\"]();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.persist();\r\n    const name = e.target.name;\r\n    const updatedElement = formControls[name];\r\n\r\n    const possibleInputs = {\r\n      checkbox: () => e.target.checked,\r\n      autocomplete: () => e.target.value, // TODO Implementar cenário de input autocomplete\r\n      default: () => e.target.value,\r\n    };\r\n\r\n    //Transferir valor do Input para o Controller\r\n    updatedElement.value = possibleInputs[e.target.type]\r\n      ? possibleInputs[e.target.type]()\r\n      : possibleInputs.default();\r\n\r\n    //Preparar Máscaras prontas\r\n    updatedElement.currentMask = setUpMask(\r\n      updatedElement.value,\r\n      updatedElement.mask\r\n    );\r\n\r\n    //Aplica Máscaras se Existirem\r\n    updatedElement.value = applyMask(\r\n      updatedElement.value,\r\n      updatedElement.currentMask\r\n    );\r\n\r\n    //Validar valores com Regras\r\n    const { valid: validInput, error } = validateInput(\r\n      updatedElement.value,\r\n      updatedElement.label,\r\n      updatedElement.validationRules\r\n    );\r\n    updatedElement.valid = validInput;\r\n    updatedElement.error = error;\r\n\r\n    //Merge dos Objetos\r\n    formControls[name] = {\r\n      ...updatedElement,\r\n      touched: true,\r\n    };\r\n\r\n    //Aplica validação de Campos e Formulário\r\n    let valid = true;\r\n    Object.keys(formControls).forEach((inputName) => {\r\n      valid = formControls[inputName].valid && valid;\r\n    });\r\n\r\n    //Aplicar Conversões de Data\r\n    formControls[name].value =\r\n      formControls[name].type === \"date\" && formControls[name].value\r\n        ? convertDate(\r\n            formControls[name].value,\r\n            \"YYYY-MM-DD\",\r\n            formControls[name].dateIOFormat\r\n          )\r\n        : updatedElement.value;\r\n\r\n    //Formatar Valor\r\n    const value = formatValue(\r\n      formControls[name].value,\r\n      formControls[name].formatValue\r\n    );\r\n\r\n    //Chama Callback se existir\r\n    onChangeCallback && onChangeCallback(name, updatedElement.valuePath, value);\r\n\r\n    setFormIsValid(valid);\r\n    setFormControls({ ...formControls });\r\n  };\r\n\r\n  const reloadFormValues = (newDataObject) => {\r\n    const formControlsCopy = { ...formControls };\r\n    Object.keys(formControlsCopy).forEach((key) => {\r\n      formControlsCopy[key].value = _.get(\r\n        newDataObject,\r\n        formControlsCopy[key].valuePath,\r\n        \"\"\r\n      );\r\n    });\r\n    setFormControls(formControlsCopy);\r\n  };\r\n\r\n  return {\r\n    formControls,\r\n    formIsSubmitting,\r\n    formIsValid,\r\n    handleSubmit,\r\n    handleChange,\r\n    reloadFormValues,\r\n    setFormControls,\r\n  };\r\n}\r\n\r\nfunction initiateFormControls(newFormControls) {\r\n  const formControls = {};\r\n\r\n  Object.keys(newFormControls).forEach((name) => {\r\n    //Merge de Objetos\r\n    formControls[name] = {\r\n      ...emptyModels(newFormControls[name].type),\r\n      ...newFormControls[name],\r\n    };\r\n\r\n    //Preparar Máscaras prontas\r\n    formControls[name].currentMask = setUpMask(\r\n      formControls[name].value ? formControls[name].value : \"\",\r\n      formControls[name].mask\r\n    );\r\n\r\n    //Aplica Máscaras se Existirem\r\n    formControls[name].value = applyMask(\r\n      formControls[name].value,\r\n      formControls[name].currentMask\r\n    );\r\n\r\n    //Aplicar Conversões de Data\r\n    if (formControls[name].type === \"date\" && formControls[name].value)\r\n      formControls[name].value = convertDate(\r\n        formControls[name].value,\r\n        formControls[name].dateIOFormat,\r\n        \"YYYY-MM-DD\"\r\n      );\r\n\r\n    //Validar valores com Regras\r\n    const { valid, error } = validateInput(\r\n      formControls[name].value,\r\n      formControls[name].label,\r\n      formControls[name].validationRules\r\n    );\r\n    formControls[name].valid = valid;\r\n    formControls[name].error = error;\r\n\r\n    //Formatar Valor\r\n    formControls[name].value = formatValue(\r\n      formControls[name].value,\r\n      formControls[name].formatValue\r\n    );\r\n  });\r\n\r\n  //Aplica validação de Campos e Formulário\r\n  let valid = true;\r\n  Object.keys(formControls).forEach((inputName) => {\r\n    valid = formControls[inputName].valid && valid;\r\n  });\r\n\r\n  return formControls;\r\n}\r\n\r\nfunction convertDate(value, inputFormat, outputFormat) {\r\n  return moment(value, inputFormat || undefined).format(\r\n    outputFormat || undefined\r\n  );\r\n}\r\n\r\nfunction formatValue(value, format) {\r\n  const validFormats = {\r\n    int: +value,\r\n    string: `${value}`,\r\n    boolean: value && value !== \"false\" ? true : false,\r\n  };\r\n\r\n  return validFormats[format] || value;\r\n}\r\n\r\nfunction applyMask(value, mask) {\r\n  if (\r\n    value &&\r\n    value.toString() &&\r\n    mask &&\r\n    (typeof mask === \"function\" || typeof mask === \"object\")\r\n  )\r\n    return conformToMask(value.toString(), mask, {\r\n      guide: false,\r\n      previousConformedValue: value.toString(),\r\n    }).conformedValue;\r\n  return value;\r\n}\r\n\r\nfunction emptyModels(type) {\r\n  const validControls = {\r\n    text: {\r\n      formatValue: \"\",\r\n      valuePath: \"\",\r\n      value: \"\",\r\n      label: \"\",\r\n      mask: \"\",\r\n      dateIOFormat: \"\",\r\n      showLabel: true,\r\n      type: \"text\",\r\n      placeholder: \"\",\r\n      autoFocus: false,\r\n      validateClass: false,\r\n      valid: false,\r\n      validationRules: {},\r\n      className: \"form-control\",\r\n      error: \"\",\r\n      showError: true,\r\n      touched: false,\r\n      readOnly: false,\r\n      autoComplete: \"off\",\r\n    },\r\n    select: {\r\n      formatValue: \"\",\r\n      valuePath: \"\",\r\n      value: \"\",\r\n      label: \"\",\r\n      showLabel: true,\r\n      type: \"select\",\r\n      autoFocus: false,\r\n      valid: false,\r\n      validationRules: {},\r\n      className: \"form-control\",\r\n      error: \"\",\r\n      showError: true,\r\n      touched: false,\r\n      valueSelector: \"value\",\r\n      labelSelector: \"label\",\r\n      options: [\r\n        { value: 1, label: \"Exemplo 1\" },\r\n        { value: 2, label: \"Exemplo 2\" },\r\n      ],\r\n    },\r\n    \"select-one\": {\r\n      formatValue: \"\",\r\n      valuePath: \"\",\r\n      value: \"\",\r\n      label: \"\",\r\n      showLabel: true,\r\n      type: \"text\",\r\n      autoFocus: false,\r\n      valid: false,\r\n      validationRules: {},\r\n      className: \"form-control\",\r\n      error: \"\",\r\n      showError: true,\r\n      touched: false,\r\n      options: [\r\n        { value: \"\", displayValue: \"\" },\r\n        { value: \"\", displayValue: \"\" },\r\n      ],\r\n    },\r\n    checkbox: {\r\n      formatValue: \"boolean\",\r\n      valuePath: \"\",\r\n      value: \"\",\r\n      label: \"\",\r\n      showLabel: true,\r\n      autoFocus: false,\r\n      validateClass: false,\r\n      valid: false,\r\n      validationRules: {},\r\n      className: \"form-check-input\",\r\n      error: \"\",\r\n      showError: true,\r\n      touched: false,\r\n      readOnly: false,\r\n    },\r\n    textArea: {\r\n      formatValue: \"\",\r\n      valuePath: \"\",\r\n      value: \"\",\r\n      label: \"\",\r\n      mask: \"\",\r\n      showLabel: true,\r\n      type: \"textArea\",\r\n      placeholder: \"\",\r\n      autoFocus: false,\r\n      validateClass: false,\r\n      valid: false,\r\n      validationRules: {},\r\n      className: \"form-control\",\r\n      error: \"\",\r\n      rows: 4,\r\n      showError: true,\r\n      touched: false,\r\n      readOnly: false,\r\n    },\r\n  };\r\n\r\n  return validControls[type] || validControls[\"text\"];\r\n}\r\n\r\nfunction setUpMask(value, maskName) {\r\n  const preCodedMasks = {\r\n    cpf: [\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      \".\",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      \".\",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      \"-\",\r\n      /\\d/,\r\n      /\\d/,\r\n    ],\r\n    cnpj: [\r\n      /\\d/,\r\n      /\\d/,\r\n      \".\",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      \".\",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      \"/\",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      \"-\",\r\n      /\\d/,\r\n      /\\d/,\r\n    ],\r\n    cellphone: [\r\n      \"(\",\r\n      /\\d/,\r\n      /\\d/,\r\n      \")\",\r\n      \" \",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      \"-\",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n    ],\r\n    phone: [\r\n      \"(\",\r\n      /\\d/,\r\n      /\\d/,\r\n      \")\",\r\n      \" \",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      \"-\",\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n      /\\d/,\r\n    ],\r\n    license_plate: [\r\n      /[A-Za-z]/,\r\n      /[A-Za-z]/,\r\n      /[A-Za-z]/,\r\n      \"-\",\r\n      /\\d/,\r\n      /[A-Za-z0-9]/,\r\n      /\\d/,\r\n      /\\d/,\r\n    ],\r\n    money: createNumberMask({\r\n      prefix: \"R$ \",\r\n      allowDecimal: true,\r\n      allowNegative: true,\r\n    }),\r\n    date: [/[0-3]/, /\\d/, \"/\", /[0-1]/, /\\d/, \"/\", /[1-2]/, /\\d/, /\\d/, /\\d/],\r\n  };\r\n  let selectedMask = maskName;\r\n\r\n  //Trata máscaras por tamanho\r\n  if (_.isPlainObject(maskName)) {\r\n    const sizesArray = _.sortBy(Object.keys(maskName));\r\n    const currentMaskSize = sizesArray.find((valueSize, index) => {\r\n      if (value.length > valueSize && sizesArray[index + 1]) return false;\r\n      return true;\r\n    });\r\n    selectedMask = maskName[currentMaskSize];\r\n  }\r\n\r\n  return preCodedMasks[selectedMask]\r\n    ? preCodedMasks[selectedMask]\r\n    : selectedMask;\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n * Render de Loading Button\r\n *\r\n * @param normalText STRING\r\n * @description texto apresentado no botão\r\n *\r\n * @param loadingText STRING\r\n * @description texto apresentado quando botão está carregando\r\n *\r\n * @param normalIcon STRING\r\n * @description ícone exibido normalmente no botão\r\n *\r\n * @param disabledWhen BOOLEAN\r\n * @description quando com valor TRUE deve desabilitar o botão\r\n *\r\n * @param isLoading BOOLEAN\r\n * @description quando com valor TRUE deve alterar o botão para desabilitado e SALVANDO\r\n */\r\n\r\nexport default function LoadingButton({\r\n  normalText,\r\n  loadingText,\r\n  normalIcon,\r\n  disabledWhen,\r\n  isLoading,\r\n  buttonClass,\r\n}) {\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={buttonClass || \"btn btn-primary mb-3\"}\r\n      disabled={disabledWhen || isLoading}\r\n    >\r\n      {isLoading ? (\r\n        <>\r\n          {loadingText || \"Salvando\"}\r\n          <span\r\n            className=\"spinner-border spinner-border-sm ml-2\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {normalText || \"Salvar\"}&nbsp;&nbsp;\r\n          <i className={normalIcon || \"fas fa-angle-double-right\"} />\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n * Render de TextAreas\r\n *\r\n * @param name STRING\r\n * @description nome do input e usado para pegar informações no formControls\r\n *\r\n * @param formControls OBJECT\r\n * @description variável contendo o formControls do hook useForm.js\r\n *\r\n * @param onChange FUNCTION\r\n * @description função que é chamada para atualizar o valor do input\r\n */\r\n\r\nexport default function TextArea({ name, formControls, onChange }) {\r\n  const {\r\n    label,\r\n    error,\r\n    showLabel,\r\n    validateClass,\r\n    valid,\r\n    touched,\r\n    className,\r\n    value,\r\n    placeholder,\r\n    autoFocus,\r\n    readOnly,\r\n    showError,\r\n    rows,\r\n  } = formControls[name];\r\n\r\n  return (\r\n    <div className=\"form-group\" id={name}>\r\n      {showLabel && <label htmlFor={name}>{label}</label>}\r\n      <textarea\r\n        value={value || \"\"}\r\n        placeholder={placeholder}\r\n        autoFocus={autoFocus}\r\n        readOnly={readOnly}\r\n        onChange={onChange}\r\n        name={name}\r\n        rows={rows || 4}\r\n        className={\r\n          validateClass && touched\r\n            ? `${className} ${valid ? \"is-valid\" : \"is-invalid\"}`\r\n            : className\r\n        }\r\n      />\r\n      {showError &&\r\n        error &&\r\n        touched &&\r\n        (validateClass ? (\r\n          <small className=\"text-danger\">{error}</small>\r\n        ) : (\r\n          <div className=\"badge badge-pill badge-danger\">{error}</div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LoadingScreen from \"../../components/utilities/LoadingScreen\";\r\nimport Input from \"../../components/form/Input\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport _ from \"lodash\";\r\nimport LoadingButton from \"../../components/form/LoadingButton\";\r\nimport TextArea from \"../../components/form/TextArea\";\r\n\r\nexport default function ClienteForm({ customer, setCustomer, doSubmit }) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const formController = useForm(\r\n    {\r\n      name: {\r\n        valuePath: \"name\",\r\n        value: customer.name,\r\n        label: \"Nome\",\r\n        type: \"text\",\r\n        validationRules: { isRequired: true, maxLength: 35 },\r\n      },\r\n      cpf_cnpj: {\r\n        valuePath: \"cpf_cnpj\",\r\n        value: customer.cpf_cnpj,\r\n        label: \"CPF/CNPJ\",\r\n        type: \"text\",\r\n        mask: { 18: \"cnpj\", 14: \"cpf\" },\r\n        validationRules: { isRequired: true, isCpfOrCnpj: true },\r\n      },\r\n      phone1: {\r\n        valuePath: \"phone1\",\r\n        value: customer.phone1,\r\n        label: \"Telefone 1\",\r\n        type: \"text\",\r\n        mask: { 14: \"phone\", 15: \"cellphone\" },\r\n        validationRules: { isRequired: true, isPhone: true },\r\n      },\r\n      phone2: {\r\n        valuePath: \"phone2\",\r\n        value: customer.phone2,\r\n        label: \"Telefone 2\",\r\n        type: \"text\",\r\n        mask: { 14: \"phone\", 15: \"cellphone\" },\r\n        validationRules: { isPhone: true },\r\n      },\r\n      email: {\r\n        valuePath: \"email\",\r\n        value: customer.email,\r\n        label: \"E-mail\",\r\n        type: \"text\",\r\n        validationRules: { isEmail: true },\r\n      },\r\n      notes: {\r\n        valuePath: \"notes\",\r\n        value: customer.notes,\r\n        label: \"Observações\",\r\n        type: \"textArea\",\r\n        validationRules: {},\r\n      },\r\n      id: {\r\n        valuePath: \"_id\",\r\n        value: customer._id,\r\n        label: \"Id Cliente\",\r\n        type: \"text\",\r\n        readOnly: true,\r\n        validationRules: {},\r\n      },\r\n    },\r\n    doSubmit,\r\n    onChange\r\n  );\r\n\r\n  useEffect(() => {\r\n    formController.reloadFormValues(customer);\r\n    setIsLoaded(true);\r\n    // eslint-disable-next-line\r\n  }, [customer]);\r\n\r\n  function onChange(name, valuePath, value) {\r\n    const newCustomer = Object.assign({}, customer);\r\n    _.set(newCustomer, valuePath, value);\r\n    setCustomer(newCustomer);\r\n  }\r\n\r\n  return isLoaded ? (\r\n    <form onSubmit={formController.handleSubmit}>\r\n      <div className=\"container p-3 rounded-lg bg-light\">\r\n        <div className=\"row m-1\">\r\n          <div className=\"col h3 p-0\">\r\n            <i className=\"fas fa-user\" />\r\n            &nbsp;Cliente\r\n          </div>\r\n          <div className=\"col-sm-auto text-center\">\r\n            <LoadingButton\r\n              disabledWhen={!formController.formIsValid}\r\n              isLoading={formController.formIsSubmitting}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col-sm\">\r\n            <Input\r\n              name=\"id\"\r\n              onChange={formController.handleChange}\r\n              formControls={formController.formControls}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <Input\r\n              name=\"cpf_cnpj\"\r\n              onChange={formController.handleChange}\r\n              formControls={formController.formControls}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <Input\r\n              name=\"name\"\r\n              onChange={formController.handleChange}\r\n              formControls={formController.formControls}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <Input\r\n              name=\"email\"\r\n              onChange={formController.handleChange}\r\n              formControls={formController.formControls}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <Input\r\n              name=\"phone1\"\r\n              onChange={formController.handleChange}\r\n              formControls={formController.formControls}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <Input\r\n              name=\"phone2\"\r\n              onChange={formController.handleChange}\r\n              formControls={formController.formControls}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <TextArea\r\n              name=\"notes\"\r\n              onChange={formController.handleChange}\r\n              formControls={formController.formControls}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  ) : (\r\n    <LoadingScreen />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LoadingScreen from \"../../components/utilities/LoadingScreen\";\r\nimport Input from \"../../components/form/Input\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport _ from \"lodash\";\r\nimport Table from \"../../components/table/Table\";\r\nimport uniqid from \"uniqid\";\r\nimport { toast } from \"react-toastify\";\r\nimport apiBackend from \"../../services/apiBackend\";\r\n\r\nexport default function VehicleForm({ customer, setCustomer, doSubmit }) {\r\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [sortColumn, setSortColumn] = useState({\r\n    path: \"license_plate\",\r\n    order: \"asc\",\r\n  });\r\n  const vehicleTable = {\r\n    columns: [\r\n      { path: \"license_plate\", label: \"Placa\" },\r\n      { path: \"model\", label: \"Modelo\" },\r\n      {\r\n        key: \"controls\",\r\n        label: (\r\n          <button\r\n            onClick={() => {\r\n              addNewVehicle();\r\n            }}\r\n            className=\"btn btn-success btn-sm\"\r\n          >\r\n            Novo&nbsp;\r\n            <i className=\"fas fa-plus\" />\r\n          </button>\r\n        ),\r\n        content: (vehicleRow) => (\r\n          <div className=\"container text-right\">\r\n            <button\r\n              className=\"btn btn-primary btn-sm\"\r\n              onClick={() => {\r\n                const vehicleIndex = customer.vehicles.findIndex(\r\n                  (customerVehicle) => vehicleRow._key === customerVehicle._key\r\n                );\r\n                setSelectedVehicle(vehicleIndex);\r\n                formController.reloadFormValues(\r\n                  customer.vehicles[vehicleIndex]\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"far fa-eye\" />\r\n            </button>\r\n            <button\r\n              onClick={async () => {\r\n                if (\r\n                  !window.confirm(\r\n                    `Você deseja realmente apagar o veículo ${\r\n                      vehicleRow.license_plate ? vehicleRow.license_plate : \"\"\r\n                    }?`\r\n                  )\r\n                )\r\n                  return;\r\n\r\n                customer.vehicles = customer.vehicles.filter(\r\n                  (vehicle) => vehicle._key !== vehicleRow._key\r\n                );\r\n                setCustomer({ ...customer });\r\n\r\n                if (customer.vehicles.length > 0) {\r\n                  setSelectedVehicle(0);\r\n                  formController.reloadFormValues(customer.vehicles[0]);\r\n                } else {\r\n                  setSelectedVehicle(null);\r\n                  formController.reloadFormValues({});\r\n                }\r\n\r\n                if (vehicleRow._id)\r\n                  await apiBackend.removeVehicle(vehicleRow._id);\r\n\r\n                toast.success(\r\n                  `Veículo ${\r\n                    vehicleRow.license_plate ? vehicleRow.license_plate : \"\"\r\n                  } foi apagado!`\r\n                );\r\n              }}\r\n              className=\"btn btn-danger btn-sm m-1\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n  const formController = useForm(\r\n    {\r\n      license_plate: {\r\n        valuePath: \"license_plate\",\r\n        label: \"Placa\",\r\n        mask: \"license_plate\",\r\n        validationRules: { isRequired: true, isLicensePlate: true },\r\n      },\r\n      brand: {\r\n        valuePath: \"brand\",\r\n        label: \"Marca\",\r\n      },\r\n      model: {\r\n        valuePath: \"model\",\r\n        label: \"Modelo\",\r\n        validationRules: { isRequired: true },\r\n      },\r\n      renavam: {\r\n        valuePath: \"renavam\",\r\n        label: \"Renavam\",\r\n      },\r\n      holder: {\r\n        valuePath: \"holder\",\r\n        label: \"Proprietário\",\r\n      },\r\n      id: {\r\n        valuePath: \"_id\",\r\n        label: \"Id Veículo\",\r\n        readOnly: true,\r\n      },\r\n    },\r\n    doSubmit,\r\n    onChange\r\n  );\r\n\r\n  useEffect(() => {\r\n    //Primeira Carga de Dados\r\n    if (customer.vehicles.length > 0 && selectedVehicle === null) {\r\n      setSelectedVehicle(0);\r\n      formController.reloadFormValues(customer.vehicles[0]);\r\n    } else if (selectedVehicle !== null)\r\n      formController.reloadFormValues(customer.vehicles[selectedVehicle]);\r\n    setIsLoaded(true);\r\n    // eslint-disable-next-line\r\n  }, [customer.vehicles]);\r\n\r\n  const addNewVehicle = () => {\r\n    const emptyVehicleIndex = customer.vehicles.findIndex(\r\n      (vehicle) => !vehicle.license_plate\r\n    );\r\n    if (emptyVehicleIndex < 0) {\r\n      customer.vehicles.push({ _isValid: false, _key: uniqid() });\r\n      setCustomer({ ...customer });\r\n\r\n      const newSelectedIndex = customer.vehicles.length - 1;\r\n      setSelectedVehicle(newSelectedIndex);\r\n      formController.reloadFormValues(customer.vehicles[newSelectedIndex]);\r\n    } else {\r\n      setSelectedVehicle(emptyVehicleIndex);\r\n      formController.reloadFormValues(customer.vehicles[emptyVehicleIndex]);\r\n    }\r\n  };\r\n\r\n  const handleSort = (sortColumn) => {\r\n    setSortColumn({ ...sortColumn });\r\n  };\r\n\r\n  const getProcessedData = () => {\r\n    const sorted = _.orderBy(\r\n      customer.vehicles,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n    return sorted;\r\n  };\r\n\r\n  function onChange(name, valuePath, value) {\r\n    const newCustomer = Object.assign({}, customer);\r\n    _.set(newCustomer.vehicles[selectedVehicle], valuePath, value);\r\n    _.set(\r\n      newCustomer.vehicles[selectedVehicle],\r\n      \"_isValid\",\r\n      formController.formIsValid\r\n    );\r\n    setCustomer(newCustomer);\r\n  }\r\n\r\n  return isLoaded ? (\r\n    customer.vehicles.length > 0 ? (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm \">\r\n            <Table\r\n              columns={vehicleTable.columns}\r\n              sortColumn={sortColumn}\r\n              onSort={handleSort}\r\n              data={getProcessedData()}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <form onSubmit={() => {}}>\r\n              <div className=\"p-3 rounded-lg bg-light\">\r\n                <div className=\"row m-1\">\r\n                  <div className=\"col h3 p-0\">\r\n                    <i className=\"fas fa-car\" />\r\n                    &nbsp;Veículo\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-sm\">\r\n                    <Input\r\n                      name=\"id\"\r\n                      onChange={formController.handleChange}\r\n                      formControls={formController.formControls}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <Input\r\n                      name=\"license_plate\"\r\n                      onChange={formController.handleChange}\r\n                      formControls={formController.formControls}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm\">\r\n                    <Input\r\n                      name=\"brand\"\r\n                      onChange={formController.handleChange}\r\n                      formControls={formController.formControls}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <Input\r\n                      name=\"model\"\r\n                      onChange={formController.handleChange}\r\n                      formControls={formController.formControls}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm\">\r\n                    <Input\r\n                      name=\"renavam\"\r\n                      onChange={formController.handleChange}\r\n                      formControls={formController.formControls}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm\">\r\n                    <Input\r\n                      name=\"holder\"\r\n                      onChange={formController.handleChange}\r\n                      formControls={formController.formControls}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    ) : (\r\n      <div className=\"row align-items-center justify-content-center\">\r\n        <div className=\"col align-self-center text-center\">\r\n          <i className=\"fas fa-car\" />\r\n          <p className=\"h5\">\r\n            Não há Veículos\r\n            <br />\r\n            cadastrados ainda\r\n          </p>\r\n          <button\r\n            onClick={() => {\r\n              addNewVehicle();\r\n              setSelectedVehicle(0);\r\n              formController.reloadFormValues(customer.vehicles[0]);\r\n            }}\r\n            className=\"btn btn-success btn-sm\"\r\n          >\r\n            Novo&nbsp;\r\n            <i className=\"fas fa-plus\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  ) : (\r\n    <LoadingScreen />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LoadingScreen from \"../../components/utilities/LoadingScreen\";\r\nimport apiBackend from \"../../services/apiBackend\";\r\nimport { toast } from \"react-toastify\";\r\nimport ClienteForm from \"./ClienteForm\";\r\nimport VehicleForm from \"./VehiclesForm\";\r\nimport uniqid from \"uniqid\";\r\n\r\nexport default function ClienteInformationForm({ match, history }) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [customer, setCustomer] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fisrtLoad() {\r\n      const { id } = match.params;\r\n\r\n      if (id === \"novo\") {\r\n        setCustomer({ _id: \"novo\", vehicles: [] });\r\n        setIsLoaded(true);\r\n        return;\r\n      }\r\n\r\n      await loadCustomer(id);\r\n      setIsLoaded(true);\r\n    }\r\n    fisrtLoad();\r\n    // eslint-disable-next-line\r\n  }, [match.params]);\r\n\r\n  const loadCustomer = async (id) => {\r\n    try {\r\n      const data = await apiBackend.getCustomerByID(id);\r\n      if (data.vehicles)\r\n        data.vehicles = data.vehicles.map((vehicle) => ({\r\n          ...vehicle,\r\n          _isValid: true,\r\n          _key: uniqid(),\r\n        }));\r\n      setCustomer(data);\r\n    } catch (error) {\r\n      history.push(`/não encontrado`);\r\n    }\r\n  };\r\n\r\n  async function handleSubmit() {\r\n    try {\r\n      //Valida Subformulários\r\n      if (customer.vehicles)\r\n        customer.vehicles.forEach((vehicle) => {\r\n          if (vehicle._isValid !== true)\r\n            throw new Error(\r\n              `O veículo ${\r\n                vehicle.license_plate ? vehicle.license_plate : \"\"\r\n              } está inválido`\r\n            );\r\n        });\r\n\r\n      //Valida se é um novo cliente\r\n      const { id } = match.params;\r\n\r\n      if (id === \"novo\") customer._id = \"\";\r\n      // Salva / Cria Novo Cliente\r\n      const savedCustomer = await apiBackend.saveCustomer(customer);\r\n\r\n      // Salva / Cria Novo Veículo para Cliente\r\n      if (customer.vehicles)\r\n        savedCustomer.vehicles = await Promise.all(\r\n          customer.vehicles.map(async (vehicle) => {\r\n            vehicle.owner = savedCustomer._id;\r\n            return await apiBackend.saveVehicle(vehicle);\r\n          })\r\n        );\r\n\r\n      //Renderiza\r\n      setCustomer(savedCustomer);\r\n      //Alerta\r\n      history.replace({ pathname: `/cliente/${savedCustomer._id}` });\r\n      toast.success(`Cliente ${savedCustomer._id} salvo com Sucesso!`);\r\n    } catch (error) {\r\n      return \"error\";\r\n    }\r\n  }\r\n\r\n  return isLoaded ? (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col border-right p-2 pr-3\">\r\n          <ClienteForm\r\n            customer={customer}\r\n            setCustomer={setCustomer}\r\n            doSubmit={handleSubmit}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`col-sm-5 p-2 pl-3 ${\r\n            customer.vehicles.length <= 0 ? \"align-self-center\" : \"\"\r\n          }`}\r\n        >\r\n          <VehicleForm\r\n            customer={customer}\r\n            setCustomer={setCustomer}\r\n            doSubmit={handleSubmit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <LoadingScreen />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport NotFound from \"./pages/NotFound\";\r\nimport VehicleTable from \"./pages/VehicleTable\";\r\nimport CustomerTable from \"./pages/CustomerTable\";\r\nimport ClienteInformationForm from \"./pages/ClienteInformationForm\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Redirect from=\"/cliente/:id/reload\" to=\"/cliente/:id\" />\r\n      <Route path=\"/cliente/:id\" component={ClienteInformationForm} />\r\n      <Route path=\"/lista/clientes\" component={CustomerTable} />\r\n      <Route path=\"/lista/veiculos\" component={VehicleTable} />\r\n      <Route path=\"/não encontrado\" component={NotFound} />\r\n      <Redirect from=\"/\" to=\"/lista/veiculos\" />\r\n      <Redirect to=\"/não encontrado\" />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport NavBar from \"./pages/NavBar\";\nimport Routes from \"./Routes.js\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <ToastContainer />\n      <Routes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}